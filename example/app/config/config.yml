framework:
  secret:          secret
  test: ~
  router:          { resource: "%kernel.root_dir%/config/routing.yml" }
  csrf_protection: true
  form:            false
  validation:      false
  templating:      { engines: ['php'] }
  translator:      { fallback: en }
  profiler:
    collect: false
  session:
    storage_id: session.storage.mock_file


boekkooi_amqp:
  command_bus: tactician.commandbus.consume

  connections:
    default:
      timeout:
        read: 60

  vhosts:
    main:
      path: '/'
      connection: default
      exchanges:
        direct_exchange:
          type: direct
      queues:
        direct_queue:
          binds:
            'direct_exchange':
              routing_key: 'direct_command'
        rpc_queue:
          binds:
            'direct_exchange':
              routing_key: 'rpc_command'

  commands:
    'Example\Command\DirectCommand':
      vhost: main
      exchange: 'direct_exchange'
      routing_key: 'direct_command'
    'Example\Command\RpcCommand':
      rpc: true
      vhost: main
      exchange: 'direct_exchange'
      routing_key: 'rpc_command'

tactician:
  commandbus:
    default:
      middleware:
        - boekkooi.amqp.middleware.command_transformer
        - boekkooi.amqp.middleware.publish
        - tactician.middleware.command_handler
    consume:
      middleware:
        - boekkooi.amqp.middleware.consume
        - boekkooi.amqp.middleware.remote_response
        - boekkooi.amqp.middleware.envelope_transformer
        - tactician.middleware.command_handler

services:
  example.direct_command_handler:
    class: Example\CommandHandler\DirectCommandHandler
    tags:
        - { name: tactician.handler, command: Example\Command\DirectCommand }
  example.rpc_command_handler:
    class: Example\CommandHandler\RpcCommandHandler
    tags:
        - { name: tactician.handler, command: Example\Command\RpcCommand }
